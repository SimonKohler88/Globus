

import time
import os

from TOFcam611.serialInterface import SerialInterface
from TOFcam611.camera import Camera

#import motordriver as mot_ctrl

import cv2
import globus_video_utils.video_processor as video_processor


GIF_PATH = os.path.join(os.path.dirname(__file__), 'gifs')

USE_STATIC_PIC = False

class GlobusServer:
    def __init__(self):
        this_path = os.path.dirname(__file__)
        # Testing: send same static picture
        pic_bmp = os.path.join(this_path, "Earth_relief_120x256.bmp")
        print(f'Static Pic Path: {pic_bmp}')
        if not os.path.exists(pic_bmp):
            print("Not existing")

        #
        img = cv2.imread(pic_bmp)
        #img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        # Compress, 80% quality
        encode_param = [int(cv2.IMWRITE_JPEG_QUALITY), 80]
        _, buffer = cv2.imencode(".jpg", img, encode_param)
        self.__pic3 = buffer.tobytes()

        self.__vids = video_processor.VideoPlayer(GIF_PATH )
        self.__vids.play()

        self.__image_to_show = None
        self.__is_image_showing = False

    def get_frame(self, time_used_prev_frame):
        # called from esp
        if self.__is_image_showing:
            if self.__image_to_show is None:
                return self.__pic3
            else:  
                return self.__image_to_show
            
        if USE_STATIC_PIC:
            return self.__pic3
        return self.__vids.get_frame(time_used_prev_frame)

    def set_image(image):
        # TODO: scale and crop and jpegging image
        self.__is_image_showing = True

    def return_to_video():
        self.__is_image_showing = False


        
