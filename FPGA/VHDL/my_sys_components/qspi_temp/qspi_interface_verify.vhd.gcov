     -:    0:Source:qspi_interface_verify.vhd
     -:    0:Working directory:
     -:    1:-- qspi_interface.vhd
     -:    2:
     -:    3:-- This file was auto-generated as a prototype implementation of a module
     -:    4:-- created in component editor.  It ties off all outputs to ground and
     -:    5:-- ignores all inputs.  It needs to be edited to make it do something
     -:    6:-- useful.
     -:    7:--
     -:    8:-- This file will not be automatically regenerated.  You should check it in
     -:    9:-- to your version control system if you want to keep it.
     -:   10:
     -:   11:library IEEE;
     -:   12:use IEEE.std_logic_1164.all;
     -:   13:use IEEE.numeric_std.all;
     -:   14:
     -:   15:library std;
     -:   16:use std.textio.all;
     -:   17:
     -:   18:
     -:   19:entity qspi_interface_verify is
     -:   20:	port (
     -:   21:		aso_out0_data          : in   std_ulogic_vector(23 downto 0);
     -:   22:        aso_out0_endofpacket   : in   std_ulogic                   ;
     -:   23:        aso_out0_ready         : out  std_ulogic                   ;
     -:   24:        aso_out0_startofpacket : in   std_ulogic                   ;
     -:   25:        aso_out0_valid         : in   std_ulogic                   ;
     -:   26:        clock_clk              : out  std_ulogic                   ;
     -:   27:        reset_reset            : out  std_ulogic                   ;
     -:   28:        conduit_qspi_data      : out  std_ulogic_vector(3 downto 0);
     -:   29:        conduit_qspi_clk       : out  std_ulogic                   ;
     -:   30:        conduit_qspi_cs        : out  std_ulogic                   ;
     -:   31:        conduit_ping_pong      : in   std_ulogic
     -:   32:	);
     -:   33:end entity qspi_interface_verify;
     -:   34:
     -:   35:architecture rtl of qspi_interface_verify is
     -:   36:
     -:   37:    procedure qspi_write_pixel(
     -:   38:        constant c_data    : in std_ulogic_vector(23 downto 0);
     -:   39:        signal clk         : in std_ulogic;
     -:   40:        signal qspi_clk    : out std_ulogic;
     -:   41:        signal data        : out std_ulogic_vector(3 downto 0)
     -:   42:    ) is
     -:   43:    begin
     1:   44:        qspi_clk <= '0';
     1:   45:        data <= (others => '0');
     -:   46:
     1:   47:        wait for 2 ns;
     -:   48:
     1:   49:        FOR i IN 5 downto 0 LOOP
     1:   50:            data <= c_data(i*4 + 3 downto i*4 );
     1:   51:            wait until rising_edge(clk);
     1:   52:            qspi_clk <= '1';
     1:   53:            wait until falling_edge(clk);
     1:   54:            qspi_clk <= '0';
     -:   55:        END LOOP;
     -:   56:    end procedure qspi_write_pixel;
     -:   57:
     -:   58:    procedure qspi_write_many_pixel(
     -:   59:        constant c_num    : in integer;
     -:   60:        signal clk         : in std_ulogic;
     -:   61:        signal qspi_clk    : out std_ulogic;
     -:   62:        signal data        : out std_ulogic_vector(3 downto 0);
     -:   63:        signal cs        : out std_logic
     -:   64:    ) is
     -:   65:        file input_file : text open read_mode is "./Earth_relief_120x256_raw2.txt";
     -:   66:        variable v_input_data : std_ulogic_vector(23 downto 0);
     -:   67:        variable v_input_line : line;
     -:   68:    begin
     -:   69:
     1:   70:       cs <= '0';
     1:   71:        wait for 2 ns;
     1:   72:        for i in 0 to c_num-1 loop
     1:   73:            readline(input_file, v_input_line);
     1:   74:            hread(v_input_line, v_input_data);
     1:   75:            qspi_write_pixel(v_input_data, clk, qspi_clk, data );
     -:   76:        end loop;
     1:   77:        cs <= '1';
     -:   78:    end procedure qspi_write_many_pixel;
     -:   79:
     -:   80:    constant c_cycle_time_100M : time := 10 ns;
     -:   81:    constant c_cycle_time_qspi : time := 38 ns; --26M
     -:   82:
     -:   83:    signal internal_qspi_clock: std_ulogic;
     -:   84:
     -:   85:    signal enable         : boolean := true;
     -:   86:
     -:   87:    file output_file : text open write_mode is "./stream_received.txt";
     -:   88:    constant c_pixel_to_send : integer := 256;
     -:   89:
     -:   90:
     -:   91:
     -:   92:begin
     -:   93:
     1:   94:    reset_reset <= transport '1', '0' after 5 ns;
     -:   95:
     -:   96:
     -:   97:	-- 100MHz
     -:   98:	p_system_clk : process
     -:   99:	begin
     1:  100:		while enable loop
     1:  101:            clock_clk <= '0';
     1:  102:            wait for c_cycle_time_100M/2;
     1:  103:            clock_clk <= '1';
     1:  104:            wait for c_cycle_time_100M/2;
     -:  105:		end loop;
     1:  106:		wait;  -- don't do it again
     -:  107:	end process p_system_clk;
     -:  108:
     -:  109:	-- qspi_clk
     -:  110:	p_qspi_clk : process
     -:  111:	begin
     1:  112:		while enable loop
     1:  113:            internal_qspi_clock <= '0';
     1:  114:            wait for c_cycle_time_qspi/2;
     1:  115:            internal_qspi_clock<= '1';
     1:  116:            wait for c_cycle_time_qspi/2;
     -:  117:		end loop;
     1:  118:		wait;  -- don't do it again
     -:  119:	end process p_qspi_clk;
     -:  120:
     1:  121:	aso_out0_ready <= '1';
     -:  122:
     -:  123:
     -:  124:
     -:  125:    p_stimuli: process
     -:  126:
     -:  127:    begin
     1:  128:        conduit_qspi_cs <= '1';
     1:  129:        conduit_qspi_clk <= '0';
     1:  130:        conduit_qspi_data <= (others => '0');
     -:  131:
     -:  132:
     1:  133:        wait for 50 ns;
     -:  134:
     1:  135:        for p in 0 to 5 loop
     1:  136:            qspi_write_many_pixel(256, internal_qspi_clock, conduit_qspi_clk, conduit_qspi_data, conduit_qspi_cs);
     -:  137:
     1:  138:            wait for 10 us;
     -:  139:        end loop;
     -:  140:
     -:  141:
 #####:  142:        wait;
     -:  143:    end process p_stimuli;
     -:  144:
     -:  145:    p_store_stream: process(all) 
     -:  146:        variable v_output_line : line;
     -:  147:    begin
     -:  148:
     1:  149:        if rising_edge(clock_clk) then
     1:  150:            if aso_out0_ready = '1' and aso_out0_valid ='1' then
     1:  151:                write(v_output_line, to_hstring(aso_out0_data));
     1:  152:                writeline(output_file, v_output_line);
     -:  153:            end if;
     -:  154:        end if;
     -:  155:
     -:  156:    end process p_store_stream;
     -:  157:
     -:  158:    p_monitor: process
     -:  159:
     -:  160:    begin
     -:  161:
     1:  162:		wait for 400 us;
     1:  163:		enable <= false;
     1:  164:		write(output, "all tested");
     1:  165:		wait;
     -:  166:    end process p_monitor;
     -:  167:
     -:  168:
     -:  169:
     -:  170:
     -:  171:
     -:  172:
     -:  173:
     -:  174:
     -:  175:
     -:  176:
     -:  177:
     -:  178:
     -:  179:
     -:  180:
     -:  181:
     -:  182:
     -:  183:
     -:  184:
     -:  185:
     -:  186:
     -:  187:
     -:  188:
     -:  189:
     -:  190:
     -:  191:
     -:  192:
     -:  193:
     -:  194:
     -:  195:
     -:  196:
     -:  197:
     -:  198:
     -:  199:
     -:  200:
     -:  201:
     -:  202:
     -:  203:
     -:  204:
     -:  205:
     -:  206:
     -:  207:
     -:  208:
     -:  209:
     -:  210:
     -:  211:
     -:  212:
     -:  213:
     -:  214:
     -:  215:
     -:  216:end architecture rtl; -- of qspi_interface
