@startuml
start

:Initialize task handle;
:Configure GPIO direction;
:Set CS GPIO high;

repeat
    :Wait for ISR notification;
    :Check if frame transfer is in progress;

    if (Frame in progress?) then (yes)
        :Log frame in progress;
    else (no)
        :Check if a frame is available;

        if (Frame available?) then (yes)
            :Get frame;

            if (Frame is NOT NULL?) then (yes)
                :Set CS GPIO low;
                :Send frame;

                if (Send successful?) then (yes)
                    :Frame sent;
                else (no)
                    :Log send error;
                endif
            else (no)
                :Resend last frame;
                :Set CS GPIO low;
                :Resend frame;

                if (Resend successful?) then (yes)
                    :Log resend success;
                else (no)
                    :Log resend error;
                endif
            endif
        else (no)
            :Log no frame to send;
        endif
    endif

    if (Frame sent?) then (yes)
        repeat
            :Wait for transfer finish notification;

            if (Transfer success?) then (yes)
                :Send next piece;
            else (no)
                :Timeout or error;
                break
            endif
        repeat while (not Entire frame sent?)

        if (Entire frame sent?) then (yes)
            :Mark frame done;
            :Log success;
        else (no)
            :Log send failure;
        endif
    else (no)
        :Increment missed SPI transfers;
    endif
repeat while (1)

@enduml