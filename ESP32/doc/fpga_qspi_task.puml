@startuml
participant "fpga_qspi_task" as Task
participant "ISR" as ISR
participant "GPIO" as GPIO
participant "FIFO" as FIFO
participant "QSPI" as QSPI
participant "Status" as Status

Task -> Task: Get current task handle


loop Continuous Task Loop
    ISR -> Task: Notify frame start
    Task -> FIFO: Check if frame transfer is in progress
    alt Frame in progress
        Task -> Task: Log frame in progress
    else Frame not in progress
        Task -> FIFO: Check if a frame is available
        alt Frame available
            Task -> FIFO: Get frame
            alt Frame is NOT NULL
                Task -> GPIO: Set CS GPIO low
                Task -> QSPI: Send frame
                alt Send successful
                    Task -> Task: Frame sent
                else Send error
                    Task -> Task: Log send error
                end
            else Frame is NULL
                Task -> Task: Resend last frame
                Task -> GPIO: Set CS GPIO low
                Task -> QSPI: Resend frame
                alt Resend successful
                    Task -> Task: Log resend success
                else Resend error
                    Task -> Task: Log resend error
                end
            end
        else No frame
            Task -> Task: Log no frame to send
        end
    end

    alt Frame sent
        loop For each part of the frame
            ISR -> Task: Notify transfer finish
            alt Transfer success
                Task -> QSPI: Send next piece
                alt Entire frame sent
                    Task -> FIFO: Mark frame done
                    Task -> Task: Log success
                else Error in sending
                    Task -> Task: Log send failure
                end
            else Transfer failed
                Task -> Task: Timeout or error
            end
        end
    else Frame not sent
        Task -> Status: Increment missed transfers
    end
end

@enduml