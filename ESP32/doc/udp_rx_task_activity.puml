@startuml

start

:Initialize source_addr;
:Bind UDP socket;

if (Bind successful?) then (yes)
    repeat
        :Receive packet with recvmsg;
        if (Packet received?) then (yes)
            if (Is control packet?) then (yes)
                :Process control packet;
            else (no)
                if (Is TFTP Transfer start?) then (yes)
                    if (FrameDownload not NULL?) then (yes)
                        :Send TFTP ACK;
                        :Initialize frame download;
                    else (no)
                        :Send TFTP ERR (FileAlreadyExists);
                    endif
                else (no)
                    if (FrameDownload NULL?) then (yes)
                        :Send TFTP ERR (FileNotFound);
                        :Set tftp_ok = 0;
                    else (no)
                        :Increment TFTP block number;
                        if (Data packet valid?) then (yes)
                            if (Data length is 0?) then (yes)
                                :Send TFTP ERR (UnknownTransferID);
                                :Set tftp_ok = 0;
                            else (no)
                                :Send TFTP ACK;
                                :Copy received data to current frame;
                                if (Last packet received?) then (yes)
                                    :Log frame received complete;
                                    :Mark frame done (fifo_mark_free_frame_done);
                                endif
                            endif
                        else (no)
                            :Send TFTP ERR (AccessViolation);
                            :Set tftp_ok = 0;
                        endif
                    endif
                    if (tftp_ok is 0) then (yes)
                        :Return free frame (fifo_return_free_frame);
                    endif
                endif
            endif
        else (no)
            :Log receiving error;
            stop
        endif
    repeat while (true)
else (no)
    :Log bind failure;
    stop
endif

stop

@enduml