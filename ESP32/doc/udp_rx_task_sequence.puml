@startuml

participant "wifi_receive_udp_task" as User
participant "wifi_receive_packet" as Func
participant "UDP_Socket"
participant "recvmsg" as Recv
participant "wifi_send_tftp_ack" as TFTP_ACK
participant "wifi_send_tftp_err" as TFTP_ERR
participant "wifi_stat.current_frame_download" as FrameDownload
participant "fifo_mark_free_frame_done" as MarkFrameDone
participant "fifo_return_free_frame" as ReturnFreeFrame

activate Func

User -> Func: call wifi_receive_packet()

loop Forever
    Func -> Recv: recvmsg
    alt TFTP Transfer Start Request
        opt FrameDownload not NULL
            Func -> TFTP_ACK: Send ACK
            note right: Initialize frame download
        else FrameDownload NULL
            Func -> TFTP_ERR: Send Error (FileAlreadyExists)
        end
    else TFTP Data Transfer
        opt FrameDownload NULL
            Func -> TFTP_ERR: Send Error (FileNotFound)
            note right: Set tftp_ok = 0
        else
            note right: Increment TFTP block number
            alt Data packet valid
                opt Data length is 0
                    Func -> TFTP_ERR: Send Error (UnknownTransferID)
                    note right: Set tftp_ok = 0
                else
                    Func -> TFTP_ACK: Send ACK
                    note right: Copy data to current frame
                    opt Last packet received
                        Func -> MarkFrameDone: Mark frame done
                    end
                end
            else
                Func -> TFTP_ERR: Send Error (AccessViolation)
                note right: Set tftp_ok = 0
            end
        end
        opt tftp_ok is 0
            Func -> ReturnFreeFrame: Return free frame
        end
    end
end

@enduml